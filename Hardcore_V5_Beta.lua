
-- Q to sprint fatties


local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\3\21","\96\45\59\78\212\54"),function(v42) if (v9(v42,2)==79) then local v91=0;while true do if (v91==0) then v30=v8(v11(v42,1,2 -1 ));return "";end end else local v92=0;local v93;while true do if (v92==0) then v93=v10(v8(v42,16));if v30 then local v116=0;local v117;while true do if (v116==0) then v117=v13(v93,v30);v30=nil;v116=1;end if (v116==1) then return v117;end end else return v93;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v94=0;local v95;while true do if (v94==0) then v95=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v95-(v95%1) ;end end else local v96=2^(v44-1) ;return (((v43%(v96 + v96))>=v96) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * (187552 -122016)) + (v50 * 256) + v49 ;end local function v35() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==2) then v58=v31(v55,21,31);v59=((v31(v55,32)==1) and  -1) or 1 ;v53=3;end if (v53==1) then v56=1;v57=(v31(v55,1,20) * (2^32)) + v54 ;v53=2;end if (v53==0) then v54=v34();v55=v34();v53=1;end if (v53==3) then if (v58==0) then if (v57==0) then return v59 * 0 ;else local v118=0;while true do if (v118==0) then v58=1;v56=0;break;end end end elseif (v58==(3951 -1904)) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end end end local function v36(v60) local v61=0;local v62;local v63;while true do if (v61==3) then return v14(v63);end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;v61=2;end if (0==v61) then v62=nil;if  not v60 then v60=v34();if (v60==0) then return "";end end v61=1;end if (2==v61) then v63={};for v101=1, #v62 do v63[v101]=v10(v9(v11(v62,v101,v101)));end v61=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64=0;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v64==0) then v65={};v66={};v67={};v68={v65,v66,nil,v67};v64=1;end if (v64==1) then v69=v34();v70={};for v103=1,v69 do local v104=0;local v105;local v106;while true do if (0==v104) then v105=v32();v106=nil;v104=1;end if (v104==1) then if (v105==1) then v106=v32()~=0 ;elseif (v105==2) then v106=v35();elseif (v105==(622 -(555 + 64))) then v106=v36();end v70[v103]=v106;break;end end end v68[3]=v32();v64=2;end if (v64==2) then for v107=1,v34() do local v108=0;local v109;while true do if (v108==0) then v109=v32();if (v31(v109,1,1)==0) then local v120=0;local v121;local v122;local v123;while true do if (v120==2) then if (v31(v122,1,1)==1) then v123[2]=v70[v123[2]];end if (v31(v122,2,2)==1) then v123[3]=v70[v123[3]];end v120=3;end if (v120==0) then v121=v31(v109,2,3);v122=v31(v109,4,937 -(857 + 74) );v120=1;end if (v120==3) then if (v31(v122,3,3)==1) then v123[1641 -(1523 + 114) ]=v70[v123[4]];end v65[v107]=v123;break;end if (1==v120) then v123={v33(),v33(),nil,nil};if (v121==0) then v123[3]=v33();v123[4]=v33();elseif (v121==1) then v123[930 -(214 + 713) ]=v34();elseif (v121==2) then v123[3]=v34() -(2^16) ;elseif (v121==3) then local v362=0;while true do if (v362==0) then v123[1 + 2 ]=v34() -((1 + 1)^16) ;v123[881 -(282 + 595) ]=v33();break;end end end v120=2;end end end break;end end end for v110=1,v34() do v66[v110-(1 + 0) ]=v39();end return v68;end end end local function v40(v71,v72,v73) local v74=v71[1 -0 ];local v75=v71[1067 -(68 + 997) ];local v76=v71[1273 -(226 + 1044) ];return function(...) local v77=v74;local v78=v75;local v79=v76;local v80=v38;local v81=1;local v82= -1;local v83={};local v84={...};local v85=v20("#",...) -1 ;local v86={};local v87={};for v97=0,v85 do if (v97>=v79) then v83[v97-v79 ]=v84[v97 + 1 ];else v87[v97]=v84[v97 + 1 ];end end local v88=(v85-v79) + 1 ;local v89;local v90;while true do v89=v77[v81];v90=v89[1];if (v90<=43) then if (v90<=21) then if (v90<=10) then if (v90<=(17 -13)) then if (v90<=1) then if (v90==0) then if (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end else v87[v89[2]]=v72[v89[3]];end elseif (v90<=2) then v73[v89[3]]=v87[v89[2]];elseif (v90==3) then if v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end else local v200=v78[v89[3]];local v201;local v202={};v201=v18({},{[v7("\47\105\138\133\130\43\181","\144\112\54\227\235\230\78\205")]=function(v300,v301) local v302=v202[v301];return v302[118 -(32 + 85) ][v302[2]];end,[v7("\140\23\1\249\199\82\189\44\10\228","\59\211\72\111\156\176")]=function(v303,v304,v305) local v306=0;local v307;while true do if (0==v306) then v307=v202[v304];v307[1][v307[2]]=v305;break;end end end});for v308=1,v89[4] do v81=v81 + 1 ;local v309=v77[v81];if (v309[1]==55) then v202[v308-1 ]={v87,v309[3]};else v202[v308-1 ]={v72,v309[3]};end v86[ #v86 + (958 -(892 + 65)) ]=v202;end v87[v89[4 -2 ]]=v40(v200,v201,v73);end elseif (v90<=7) then if (v90<=5) then v87[v89[2]][v89[5 -2 ]]=v87[v89[4]];elseif (v90>6) then v87[v89[2]]=v73[v89[3]];else local v206=0;local v207;local v208;while true do if (v206==0) then v207=v89[3];v208=v87[v207];v206=1;end if (v206==1) then for v365=v207 + 1 ,v89[4] do v208=v208   .. v87[v365] ;end v87[v89[2]]=v208;break;end end end elseif (v90<=8) then v87[v89[2]]=v87[v89[3]]%v87[v89[4]] ;elseif (v90==9) then local v209=v89[2];local v210=v87[v209 + (3 -1) ];local v211=v87[v209] + v210 ;v87[v209]=v211;if (v210>0) then if (v211<=v87[v209 + 1 ]) then local v366=0;while true do if (v366==0) then v81=v89[3];v87[v209 + 3 ]=v211;break;end end end elseif (v211>=v87[v209 + 1 ]) then local v367=0;while true do if (v367==0) then v81=v89[3];v87[v209 + (353 -(87 + 263)) ]=v211;break;end end end else v87[v89[2]][v89[3]]=v89[4];end elseif (v90<=(195 -(67 + 113))) then if (v90<=12) then if (v90>11) then if  not v87[v89[2 + 0 ]] then v81=v81 + 1 ;else v81=v89[3];end else local v140=0;local v141;while true do if (v140==0) then v141=v89[2];v87[v141](v87[v141 + 1 ]);break;end end end elseif (v90<=13) then local v142=v89[2];local v143=v87[v142];for v193=v142 + 1 ,v82 do v15(v143,v87[v193]);end elseif (v90>14) then v87[v89[2]]=v73[v89[3]];else local v218=0;local v219;while true do if (v218==0) then v219=v89[2];v87[v219]=v87[v219](v21(v87,v219 + 1 ,v82));break;end end end elseif (v90<=18) then if (v90<=16) then local v144=0;local v145;while true do if (v144==0) then v145=v89[2];v87[v145]=v87[v145](v21(v87,v145 + 1 ,v89[3]));break;end end elseif (v90==17) then v87[v89[2]][v87[v89[3]]]=v89[4];else local v222=v89[2];v87[v222](v21(v87,v222 + 1 ,v82));end elseif (v90<=19) then if (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90==20) then local v224=v89[2];local v225=v87[v224 + 2 ];local v226=v87[v224] + v225 ;v87[v224]=v226;if (v225>0) then if (v226<=v87[v224 + 1 ]) then local v368=0;while true do if (v368==0) then v81=v89[3];v87[v224 + 3 ]=v226;break;end end end elseif (v226>=v87[v224 + 1 ]) then local v369=0;while true do if (v369==0) then v81=v89[7 -4 ];v87[v224 + 3 ]=v226;break;end end end else v87[v89[2]]();end elseif (v90<=32) then if (v90<=26) then if (v90<=23) then if (v90==22) then v87[v89[2]]=v87[v89[3]][v89[4]];else v87[v89[2]]=v89[3] + v87[v89[4]] ;end elseif (v90<=24) then v87[v89[2 + 0 ]]=v89[11 -8 ];elseif (v90>25) then local v228=0;local v229;local v230;local v231;while true do if (v228==0) then v229=v78[v89[3]];v230=nil;v228=1;end if (v228==1) then v231={};v230=v18({},{[v7("\113\184\234\35\74\130\251","\77\46\231\131")]=function(v370,v371) local v372=0;local v373;while true do if (v372==0) then v373=v231[v371];return v373[953 -(802 + 150) ][v373[5 -3 ]];end end end,[v7("\133\107\184\69\173\93\184\68\191\76","\32\218\52\214")]=function(v374,v375,v376) local v377=v231[v375];v377[1][v377[2]]=v376;end});v228=2;end if (2==v228) then for v379=1,v89[4] do v81=v81 + (1 -0) ;local v380=v77[v81];if (v380[1 + 0 ]==55) then v231[v379-1 ]={v87,v380[3]};else v231[v379-(998 -(915 + 82)) ]={v72,v380[3]};end v86[ #v86 + 1 + 0 ]=v231;end v87[v89[2 -0 ]]=v40(v229,v230,v73);break;end end elseif (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=29) then if (v90<=27) then v73[v89[3]]=v87[v89[2]];elseif (v90==28) then local v232=0;local v233;while true do if (v232==0) then v233=v89[1189 -(1069 + 118) ];v87[v233](v21(v87,v233 + 1 ,v89[3]));break;end end else local v234=0;local v235;while true do if (0==v234) then v235=v89[2];do return v87[v235](v21(v87,v235 + 1 ,v89[3]));end break;end end end elseif (v90<=30) then local v153=v89[2];v87[v153](v21(v87,v153 + 1 ,v82));elseif (v90>31) then local v236=v89[3];local v237=v87[v236];for v314=v236 + 1 ,v89[4] do v237=v237   .. v87[v314] ;end v87[v89[2]]=v237;else local v239=v89[2];local v240=v87[v89[3]];v87[v239 + 1 ]=v240;v87[v239]=v240[v89[4]];end elseif (v90<=37) then if (v90<=34) then if (v90>33) then v87[v89[4 -2 ]]=v87[v89[3]];else do return v87[v89[3 -1 ]]();end end elseif (v90<=35) then v87[v89[2]]=v87[v89[3]]%v87[v89[4]] ;elseif (v90==36) then local v244=0;local v245;local v246;local v247;while true do if (v244==1) then v247=v87[v245 + 2 ];if (v247>0) then if (v246>v87[v245 + 1 ]) then v81=v89[1 + 2 ];else v87[v245 + 3 ]=v246;end elseif (v246<v87[v245 + 1 ]) then v81=v89[3];else v87[v245 + 3 ]=v246;end break;end if (v244==0) then v245=v89[2];v246=v87[v245];v244=1;end end else local v248=0;local v249;while true do if (v248==0) then v249=v89[2];do return v87[v249](v21(v87,v249 + (1 -0) ,v89[3]));end break;end end end elseif (v90<=40) then if (v90<=38) then v87[v89[2]][v87[v89[3]]]=v87[v89[4]];elseif (v90>39) then v87[v89[2]]=v89[3]~=0 ;else local v251=v89[2];v87[v251](v21(v87,v251 + 1 ,v89[3]));end elseif (v90<=41) then v87[v89[2]]=v89[3];elseif (v90>(42 + 0)) then local v252=v89[2];local v253,v254=v80(v87[v252](v21(v87,v252 + 1 ,v82)));v82=(v254 + v252) -1 ;local v255=0;for v315=v252,v82 do v255=v255 + 1 ;v87[v315]=v253[v255];end else local v256=0;local v257;local v258;local v259;local v260;while true do if (v256==2) then for v382=v257,v82 do v260=v260 + 1 ;v87[v382]=v258[v260];end break;end if (v256==1) then v82=(v259 + v257) -(792 -(368 + 423)) ;v260=0;v256=2;end if (v256==0) then v257=v89[2];v258,v259=v80(v87[v257](v87[v257 + 1 ]));v256=1;end end end elseif (v90<=65) then if (v90<=54) then if (v90<=48) then if (v90<=45) then if (v90>44) then local v161=0;local v162;while true do if (v161==0) then v162=v89[2];v87[v162]=v87[v162](v21(v87,v162 + 1 ,v82));break;end end else for v194=v89[2],v89[3] do v87[v194]=nil;end end elseif (v90<=46) then v87[v89[6 -4 ]]= #v87[v89[3]];elseif (v90==47) then v87[v89[2]]={};else v81=v89[3];end elseif (v90<=51) then if (v90<=(67 -(10 + 8))) then v87[v89[7 -5 ]][v87[v89[3]]]=v87[v89[4]];elseif (v90==50) then local v263=0;local v264;while true do if (v263==0) then v264=v89[2];v87[v264]=v87[v264](v21(v87,v264 + 1 ,v89[3]));break;end end else local v265=0;local v266;local v267;local v268;local v269;while true do if (v265==0) then v266=v89[2];v267,v268=v80(v87[v266](v21(v87,v266 + 1 ,v89[3])));v265=1;end if (v265==1) then v82=(v268 + v266) -1 ;v269=0;v265=2;end if (v265==2) then for v385=v266,v82 do v269=v269 + 1 ;v87[v385]=v267[v269];end break;end end end elseif (v90<=52) then v81=v89[3];elseif (v90==53) then if  not v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v87[v89[444 -(416 + 26) ]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=59) then if (v90<=56) then if (v90>55) then for v196=v89[2],v89[3] do v87[v196]=nil;end else v87[v89[2]]=v87[v89[3]];end elseif (v90<=57) then v87[v89[2]]=v87[v89[9 -6 ]][v89[4]];elseif (v90>58) then local v270=v89[2];local v271=v87[v89[3]];v87[v270 + 1 + 0 ]=v271;v87[v270]=v271[v89[4]];else v87[v89[2]][v89[3]]=v89[6 -2 ];end elseif (v90<=(500 -(145 + 293))) then if (v90<=60) then local v171=v89[2];v87[v171](v87[v171 + 1 ]);elseif (v90==61) then v87[v89[2]]=v87[v89[3]]%v89[4] ;else v87[v89[2]]= #v87[v89[3]];end elseif (v90<=(493 -(44 + 386))) then local v172=0;local v173;while true do if (v172==0) then v173=v89[2];v87[v173]=v87[v173](v87[v173 + 1 ]);break;end end elseif (v90==64) then local v279=v89[2];v87[v279]=v87[v279](v87[v279 + 1 ]);else local v281=0;local v282;local v283;local v284;local v285;while true do if (v281==0) then v282=v89[2];v283,v284=v80(v87[v282](v21(v87,v282 + 1 ,v89[3])));v281=1;end if (v281==1) then v82=(v284 + v282) -1 ;v285=0;v281=2;end if (v281==2) then for v388=v282,v82 do local v389=0;while true do if (v389==0) then v285=v285 + 1 ;v87[v388]=v283[v285];break;end end end break;end end end elseif (v90<=76) then if (v90<=70) then if (v90<=67) then if (v90>66) then v87[v89[2]]=v89[3] + v87[v89[4]] ;else local v175=0;local v176;local v177;local v178;local v179;while true do if (v175==0) then v176=v89[2];v177,v178=v80(v87[v176](v21(v87,v176 + 1 ,v82)));v175=1;end if (v175==2) then for v330=v176,v82 do v179=v179 + 1 ;v87[v330]=v177[v179];end break;end if (v175==1) then v82=(v178 + v176) -1 ;v179=0;v175=2;end end end elseif (v90<=68) then do return;end elseif (v90==69) then v87[v89[2]][v87[v89[3]]]=v89[4];else do return;end end elseif (v90<=73) then if (v90<=71) then local v180=0;local v181;local v182;local v183;local v184;while true do if (v180==2) then for v333=v181,v82 do local v334=0;while true do if (v334==0) then v184=v184 + 1 ;v87[v333]=v182[v184];break;end end end break;end if (v180==0) then v181=v89[2];v182,v183=v80(v87[v181](v87[v181 + (1487 -(998 + 488)) ]));v180=1;end if (v180==1) then v82=(v183 + v181) -(1 + 0) ;v184=0;v180=2;end end elseif (v90>72) then v87[v89[2]]=v40(v78[v89[3]],nil,v73);else do return v87[v89[2]]();end end elseif (v90<=74) then v87[v89[2]]();elseif (v90>(62 + 13)) then v87[v89[2]]=v72[v89[3]];else local v291=v89[2];do return v21(v87,v291,v82);end end elseif (v90<=81) then if (v90<=78) then if (v90>77) then v87[v89[2]]=v87[v89[3]] + v89[4] ;else local v186=v89[2];local v187=v87[v186];local v188=v87[v186 + 2 ];if (v188>0) then if (v187>v87[v186 + (773 -(201 + 571)) ]) then v81=v89[3];else v87[v186 + 3 ]=v187;end elseif (v187<v87[v186 + 1 ]) then v81=v89[3];else v87[v186 + 3 ]=v187;end end elseif (v90<=79) then local v189=0;local v190;while true do if (v189==0) then v190=v89[1140 -(116 + 1022) ];do return v21(v87,v190,v82);end break;end end elseif (v90==80) then v87[v89[2]]={};else v87[v89[2]][v89[3]]=v87[v89[4]];end elseif (v90<=84) then if (v90<=82) then v87[v89[2]]=v89[3]~=(0 -0) ;elseif (v90==83) then v87[v89[2]]=v87[v89[3]]%v89[4] ;elseif v87[v89[2]] then v81=v81 + 1 + 0 ;else v81=v89[3];end elseif (v90<=85) then v87[v89[2]]=v87[v89[3]] + v89[4] ;elseif (v90>86) then local v296=0;local v297;local v298;while true do if (1==v296) then for v390=v297 + 1 ,v82 do v15(v298,v87[v390]);end break;end if (0==v296) then v297=v89[2];v298=v87[v297];v296=1;end end else v87[v89[2]]=v40(v78[v89[3]],nil,v73);end v81=v81 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);




-- Main Coder: Kotyara1#00019
-- Ogg Hardocore Made By Ping#1848 And Noonie#0001
-- Extra Thanks By: Depth Real, Artemis_Official, And Pr!me A-60.
